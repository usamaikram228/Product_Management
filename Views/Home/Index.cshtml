@{
    ViewData["Title"] = "Home";
}
@model List<CRUD.Models.Product>
<link href="~/css/index.css" rel="stylesheet" />

<body>
    <div class="container mx-auto mt-4">
        <div class="row gx-4 gy-4 mb-4">
            <!-- Search form -->
            <form asp-action="searching" method="get" style="text-align: right;
    display: flex;
    justify-content: end">
                <div class="form-group" style=" max-width: 400px;
    display: flex;
    justify-content: end;
    align-items: center;
    width: 100%;
    column-gap: 10px;">
                    <input type="text" class="form-control" name="searchString" placeholder="Search products" style="height:40px">
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
            @foreach (var product in Model)
            {
                <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                    <div class="card">
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(product.ImageData)" class="card-profile-img" alt="Product Image" style="aspect-ratio: 5 / 5; mix-blend-mode: color-dodge; object-fit: cover; object-position: center;" />
                        <div class="card-body">
                            <div class="d-flex flex-column justify-content-between h-100">
                                <div>
                                    <h5 class="card-title">@product.Name</h5> <!-- Access product properties -->
                                    <h6 class="card-subtitle mb-2 text-muted">@product.Category</h6> <!-- Access product properties -->
                                    <h6 class="card-subtitle mb-2 text-muted">@product.Price</h6> <!-- Access product properties -->
                                    <p class="card-text">@product.Description</p> <!-- Access product properties -->
                                    <!-- Add more product details as needed -->
                                </div>
                                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                {
                                    <div class="mt-3">
                                        <a href="@Url.Action("UpdateProduct", "Products", new { id = product.Id })" class="btn btn-primary mr-2"><i class="fas fa-link"></i> Update</a>
                                        <a href="@Url.Action("DeleteProduct", "Products", new { id = product.Id })" class="btn btn-primary mr-2"><i class="fas fa-link"></i> Delete</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Pagination links -->
            <div class="col-12 mt-4 pagination">
                @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
                {
                    int currentPage = (int)ViewData["CurrentPage"];
                    int totalPages = (int)ViewData["TotalPages"];

                    if (currentPage > 1)
                    {
                        <a href="@Url.Action("Index", new { page = 1 })" class="btn btn-primary">First</a>
                        <a href="@Url.Action("Index", new { page = currentPage - 1 })" class="btn btn-primary">Previous</a>
                    }

                    for (int i = 1; i <= totalPages; i++)
                    {
                        <a href="@Url.Action("Index", new { page = i })" class="btn btn-primary @((i == currentPage) ? "active" : "")">@i</a>
                    }

                    if (currentPage < totalPages)
                    {
                        <a href="@Url.Action("Index", new { page = currentPage + 1 })" class="btn btn-primary">Next</a>
                        <a href="@Url.Action("Index", new { page = totalPages })" class="btn btn-primary">Last</a>
                    }
                }
            </div>

        </div>
    </div>
</body>

